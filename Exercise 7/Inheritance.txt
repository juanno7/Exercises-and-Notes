Inheritance:

Definition: 
	Inheritance is a mechanism that allows one class (subclass or derived class) to inherit attributes and methods from another 	class (superclass or base class). The subclass can extend or modify the behavior of the superclass.

Superclass and Subclass:

Superclass (Base Class): 
	The class being inherited from. It defines common attributes and methods shared by one or more subclasses.

Subclass (Derived Class): 
	The class that inherits from the superclass. It can add new attributes or methods, and it can override or extend the 	behavior of the superclass.

Keyword extends: 
	In Java and many other OOP languages, inheritance is established using the extends keyword. For example: class Subclass 	extends Superclass.

"is-a" Relationship: 
	Inheritance models an "is-a" relationship. For example, if Cat is a subclass of Animal, it means a Cat is an Animal.

Access Control: 
	Inherited members (attributes and methods) can have different access modifiers:

public: 
	Inherited members are accessible to all classes.

protected: 
	Inherited members are accessible to the subclass and its package.

default: 
	Inherited members are accessible within the same package.

private: 
	Inherited members are not accessible in the subclass (unless accessed through public methods).

Constructor in Subclass: 
	A subclass can have its own constructors, but it also implicitly calls the constructor of its superclass using the super() 	keyword.

Overriding Methods: 
	A subclass can override methods defined in the superclass. This allows the subclass to provide its own implementation of a 	method inherited from the superclass.