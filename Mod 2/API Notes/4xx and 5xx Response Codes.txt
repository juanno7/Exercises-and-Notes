4xx and 5xx response codes
Assuming there are no network problems, there are still potential errors that are reflected in the response status code. In an earlier unit, you learned that status codes 200-299 mean success, and 400-599 status codes are for errors.

RestTemplate throws a RestClientResponseException for any response status code in the 400-599 range:

try {
    restTemplate.delete(API_URL + "users/remove/23");
}
catch (RestClientResponseException e) {
    System.out.println(e.getRawStatusCode());
}

RestClientResponseException has several useful messages that can clarify and potentially allow the application to understand and correct problems:

Method				Description

getRawStatusCode()		Returns the raw HTTP status code value
getStatusText()			Returns the HTTP status text
getResponseHeaders()		Returns HTTP response headers (may be null)
getResponseBodyAsString()	Returns HTTP response body converted to String (may be null)

Note: 

What about 1xx and 3xx response status codes?
Even though 1xx status codes are part of the HTTP specification, they are used primarily in traditional web apps. You won't often see one as a response from an API.

Similarly, 3xx codes are typically used by servers that host websites. For example, if a URL changed for a page, the server responds with a 301 Moved Permanently or 302 Found. Web APIs, on the other hand, typically don't change endpoints as it may break existing applications.

The main focus of API designers is on simplicity and ease of use. They want application programmers to make use of the services they've created. Forcing application developers to handle 1xx or 3xx response codes complicates their work, and sours their impression and usage of an API.

